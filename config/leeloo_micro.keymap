/*
 * Copyright (c) 2023 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

// Layers
#define ML    0       // Main
#define LL    1       // Lower
#define RL    2       // Raise
#define TL    3       // Tri

#define FW    4       // Firmware


// Short versions
#define WIN_SC      LG(LS(S))

#define BT0         BT_SEL 0
#define BT1         BT_SEL 1
#define BT2         BT_SEL 2
#define BT3         BT_SEL 3
#define BT4         BT_SEL 4

#define BOOTLDR     &bootloader

#define VOLUP   C_VOL_UP
#define VOLDN   C_VOL_DN
#define VOLMT   C_MUTE

#define RGBON   &rgb_ug RGB_ON
#define RGBOFF  &rgb_ug RGB_OFF
#define RGBTOG  &rgb_ug RGB_TOG
#define RGBHUI  &rgb_ug RGB_HUI
#define RGBHUD  &rgb_ug RGB_HUD
#define RGBSAI  &rgb_ug RGB_SAI
#define RGBSAD  &rgb_ug RGB_SAD
#define RGBBRI  &rgb_ug RGB_BRI
#define RGBBRD  &rgb_ug RGB_BRD
#define RGBEFF  &rgb_ug RGB_EFF


/*
 * Assign the cs-gpios pin to 4.
 * Uncomment these next few lines if implementing nice!view Displays
 */
nice_view_spi: &spi0 {
//    compatible = "nordic,nrf-spim";
//    pinctrl-0 = <&spi0_default>;
//    pinctrl-1 = <&spi0_sleep>;
//    pinctrl-names = "default", "sleep";
    cs-gpios = <&pro_micro 4 GPIO_ACTIVE_HIGH>;
};


/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LL RL>;
            then-layer = <TL>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_tab {
            timeout-ms = <50>;
            key-positions = <0 1>;
            //layers = <ML>;
            bindings = <&kp TAB>;
        };
        
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <9 8>;
            //layers = <ML>;
            bindings = <&kp BSPC>;
        };
         
        combo_grave {
            timeout-ms = <50>;
            key-positions = <10 11>;
            layers = <ML>;
            bindings = <&kp GRAVE>;
        };
        
        combo_sqt {
            timeout-ms = <50>;
            key-positions = <19 18>;
            layers = <ML>;
            bindings = <&kp SQT>;
        };
    };

    macros {
        enDSH_W: en_Dash {
            label = "enDSH_W";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp KP_N0>
                , <&macro_release &kp LALT>
                ;
        };

        emDSH_W: em_Dash {
            label = "emDSH_W";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp KP_N1>
                , <&macro_release &kp LALT>
                ;
        };
    };

    behaviors {
        tdw_Q: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "WIN_QUIT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp LA(F4)>;
        };

        tdw_LRP: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "WIN_LRPAR";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
//layer 0
        base_layer {
            label = " Pop!_OS";
            bindings = <
//╭──────────┬──────────┬──────────┬───────────┬──────────╮                         ╭──────────┬───────────┬──────────┬──────────┬──────────╮
//│  Q       │  W       │  E       │  R        │  T       │                         │  Y       │  U        │  I       │  O       │  P       │
  &kp Q      &kp W      &kp E      &kp R       &kp T                                &kp Y      &kp U       &kp I      &kp O      &kp P
//├──────────┼──────────┼──────────┼───────────┼──────────┤                         ├──────────┼───────────┼──────────┼──────────┼──────────┤
//│  A       │  S       │  D       │  F        │  G       │                         │  H       │  J        │  K       │  L       │ ; :      │
  &kp A      &kp S      &kp D      &kp F       &kp G                                &kp H      &kp J       &kp K      &kp L      &kp SEMI
//├──────────┼──────────┼──────────┼───────────┼──────────┼──────────╮   ╭──────────┼──────────┼───────────┼──────────┼──────────┼──────────┤
//│  Z       │  X       │  C       │  V        │  B       │          |   |          │  N       │  M        │ , <      │ . >      │ . ?      │
  &kp Z      &kp X      &kp C      &kp V       &kp B      &lt 4 LGUI     &lt 4 DEL  &kp N      &kp M       &kp COMMA  &kp DOT    &kp FSLH
//╰──────────┴──────────┼──────────┼───────────┼──────────┼──────────┤   ├──────────┼──────────┼───────────┼──────────┼──────────┴──────────╯
                        &kp LCTRL  &mt LALT ESC &mo 1     &kp LSHFT      &kp SPACE  &mo 2      &mt RCTRL RET &kp RALT
//                      ╰──────────┴───────────┴──────────┴──────────╯   ╰──────────┴──────────┴───────────┴──────────╯
          >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp DOWN UP>;
        };
//layer 1
        lower_layer {
            label = " Lower";
            bindings = <
//╭──────────┬──────────┬──────────┬───────────┬──────────╮                         ╭──────────┬───────────┬──────────┬──────────┬──────────╮
//│  Q       │  W       │  E       │  R        │  T       │                         │  Y       │  U        │  I       │  O       │  P       │
  &kp N1     &kp N2     &kp N3     &kp N4      &kp N5                               &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
//├──────────┼──────────┼──────────┼───────────┼──────────┤                         ├──────────┼───────────┼──────────┼──────────┼──────────┤
//│  A       │  S       │  D       │  F        │  G       │                         │  H       │  J        │  K       │  L       │ ; :      │
  &tdx_LRA   &tdw_LRP   &tdx_LRB   &tdx_LRR    &trans                               &trans     &trans      &trans     &trans     &kp QUOT
//├──────────┼──────────┼──────────┼───────────┼──────────┼──────────╮   ╭──────────┼──────────┼───────────┼──────────┼──────────┼──────────┤
//│  Z       │  X       │  C       │  V        │  B       │          |   |          │  N       │  M        │ , <      │ . >      │ . ?      │
  &kp LSHFT  &trans     &trans     &trans      &trans     &trans         &trans     &enDSH_W   &emDSH_W   &trans     &trans     &kp RSHFT
//╰──────────┴──────────┼──────────┼───────────┼──────────┼──────────┤   ├──────────┼──────────┼───────────┼──────────┼──────────┴──────────╯
                        &trans     &trans      &trans     &trans         &trans     &trans     &trans      &trans
//                      ╰──────────┴───────────┴──────────┴──────────╯   ╰──────────┴──────────┴───────────┴──────────╯
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp RIGHT LEFT>;
        };
//layer 2
        raise_layer {
            label = " Raise";
            bindings = <
&kp TAB    &trans     &trans     &kp WIN_SC &trans                           &kp PG_UP  &kp HOME   &kp UP     &kp END    &kp BSLH
&kp CAPS   &trans     &trans     &trans     &trans                           &kp PG_DN  &kp LEFT   &kp DOWN   &kp RIGHT  &kp GRAVE
&trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &mt RSFT TILDE
                      &trans     &trans     &trans     &trans     &trans     &trans     &kp DEL    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };
//layer 3
        tri_layer {
            label = " Tri";
            bindings = <

&kp F1     &kp F2     &kp F3     &kp F4     &kp F5                           &trans     &trans     &kp VOLUP  &trans     &trans
&kp F6     &kp F7     &kp F8     &kp F9     &kp F10                          &trans     &trans     &kp VOLDN  &trans     &trans
&kp F11    &kp F12    &trans     &trans     &trans     &trans     &trans     &trans     &kp VOLMT  &trans     &trans     &trans
                      &trans     &trans     &trans     &trans     &trans     &trans     &trans     &tog QX_M
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp DOWN UP>;
        };
//layer 4
        firmware_layer {
            label = " Firmware";
            bindings = <

&bt BT0    &bt BT1    &bt BT2    &bt BT3    &bt BT4                          &bt BT0    &bt BT1    &bt BT2    &bt BT3    &bt BT4
BOOTLDR    &sys_reset &none      &none      &none                            &none      &none      &none      &sys_reset BOOTLDR
&trans     &none      &none      &none      &none      &trans     &trans     &none      &none      &none      &none      &trans
                      &trans     &bt BT_CLR &trans     &trans     &trans     &trans     &none      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

    };
};
